<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\RAM\SVC.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\RAM\SVC.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.02 [Build 28]: Last Updated: Sun Feb 09 21:18:25 2014
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
k_set_process_priority &rArr; k_linkedlist_remove &rArr; linkedlist_remove &rArr; linkedlist_pop_back &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC_IRQHandler</a><BR>
 <LI><a href="#[61]">swap_process</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">k_linkedlist_push_back</a><BR>
 <LI><a href="#[30]">k_release_memory_block</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">k_release_processor</a><BR>
 <LI><a href="#[60]">get_next_process</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">k_linkedlist_push_back</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from hal.o(.emb_text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[34]">k_get_process_priority</a> from process.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[30]">k_release_memory_block</a> from memory.o(.text) referenced 2 times from main_svc.o(.text)
 <LI><a href="#[33]">k_release_processor</a> from process.o(.text) referenced 2 times from k_proc.o(.text)
 <LI><a href="#[2f]">k_request_memory_block</a> from memory.o(.text) referenced 2 times from main_svc.o(.text)
 <LI><a href="#[31]">k_rtx_init</a> from k_rtx_init.o(.text) referenced from main_svc.o(.text)
 <LI><a href="#[35]">k_set_process_priority</a> from process.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[2d]">main</a> from main_svc.o(.text) referenced from entry8.o(.ARM.Collect$$$$00000009)
 <LI><a href="#[40]">null_proc</a> from k_proc.o(.text) referenced from k_proc.o(.text)
 <LI><a href="#[32]">putc</a> from uart_polling.o(.text) referenced from k_rtx_init.o(.text)
 <LI><a href="#[36]">putcp</a> from printf.o(.text) referenced from printf.o(.text)
 <LI><a href="#[49]">usr_proc_1</a> from usr_proc.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[48]">usr_proc_2</a> from usr_proc.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[47]">usr_proc_3</a> from usr_proc.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[46]">usr_proc_4</a> from usr_proc.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[45]">usr_proc_5</a> from usr_proc.o(.text) referenced from usr_proc.o(.text)
 <LI><a href="#[42]">usr_proc_6</a> from usr_proc.o(.text) referenced from usr_proc.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[37]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[41]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[64]"></a>__rte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_new_process
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hal.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>test_memory</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, main_svc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>

<P><STRONG><a name="[2d]"></a>main</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[31]"></a>k_rtx_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, k_rtx_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = k_rtx_init &rArr; k_init_processor &rArr; k_linkedlist_push_back &rArr; linkedlist_push_back &rArr; k_request_memory_block &rArr; k_release_processor &rArr; get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_processor
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_memory_blocks
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_printf
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_svc.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>null_proc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, k_proc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> k_proc.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>k_set_procs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, k_proc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_processor
</UL>

<P><STRONG><a name="[38]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[70]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[42]"></a>usr_proc_6</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usr_proc_6 &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>usr_proc_5</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usr_proc_5 &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>usr_proc_4</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usr_proc_4 &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>usr_proc_3</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usr_proc_3 &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>usr_proc_2</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usr_proc_2 &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>usr_proc_1</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usr_proc_1 &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>usr_set_procs</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, usr_proc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usr_set_procs &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_processor
</UL>

<P><STRONG><a name="[3b]"></a>SystemInit</STRONG> (Thumb, 476 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>uart_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uart_polling.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[71]"></a>uart_get_char</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, uart_polling.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>uart_put_char</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart_polling.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_6
</UL>

<P><STRONG><a name="[43]"></a>uart_put_string</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, uart_polling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_set_procs
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_1
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_2
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_3
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_5
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_proc_6
</UL>

<P><STRONG><a name="[32]"></a>putc</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, uart_polling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = putc &rArr; uart_put_string
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_string
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_put_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> k_rtx_init.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>tfp_format</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putchw
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2i
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2a
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui2a
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_sprintf
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_printf
</UL>

<P><STRONG><a name="[3d]"></a>init_printf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[3a]"></a>tfp_printf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_memory
</UL>

<P><STRONG><a name="[51]"></a>tfp_sprintf</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putcp
</UL>

<P><STRONG><a name="[58]"></a>linkedlist_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, linkedlist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_memory_to_queue
</UL>

<P><STRONG><a name="[52]"></a>linkedlist_pop_back</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, linkedlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = linkedlist_pop_back &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_remove
</UL>

<P><STRONG><a name="[53]"></a>linkedlist_pop_front</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, linkedlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = linkedlist_pop_front &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_pop_front
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_remove
</UL>

<P><STRONG><a name="[54]"></a>linkedlist_remove</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, linkedlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = linkedlist_remove &rArr; linkedlist_pop_back &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_pop_front
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_pop_back
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_remove
</UL>

<P><STRONG><a name="[55]"></a>linkedlist_push_front</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, linkedlist.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
</UL>

<P><STRONG><a name="[56]"></a>linkedlist_push_back</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, linkedlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = linkedlist_push_back &rArr; k_request_memory_block &rArr; k_release_processor &rArr; get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
</UL>

<P><STRONG><a name="[57]"></a>allocate_memory_to_queue</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = allocate_memory_to_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_memory_blocks
</UL>

<P><STRONG><a name="[59]"></a>allocate_memory_to_pcbs</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_memory_blocks
</UL>

<P><STRONG><a name="[3e]"></a>k_init_memory_blocks</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = k_init_memory_blocks &rArr; allocate_memory_to_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_memory_to_pcbs
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_memory_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[69]"></a>k_alloc_stack</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_processor
</UL>

<P><STRONG><a name="[2f]"></a>k_request_memory_block</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = k_request_memory_block &rArr; k_release_processor &rArr; get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_push_back
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_push_front
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main_svc.o(.text)
<LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>k_release_memory_block</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_should_preempt_current_process
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_remove
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_pop_front
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_pop_back
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main_svc.o(.text)
<LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>swap_pcb_to_kernel_pcb</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_remove
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_pop_front
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
</UL>

<P><STRONG><a name="[5d]"></a>restore_current_pcb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_remove
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_pop_front
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
</UL>

<P><STRONG><a name="[5b]"></a>k_linkedlist_push_back</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = k_linkedlist_push_back &rArr; linkedlist_push_back &rArr; k_request_memory_block &rArr; k_release_processor &rArr; get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_current_pcb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_pcb_to_kernel_pcb
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_push_back
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_init_processor
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_process
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_process
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
</UL>

<P><STRONG><a name="[5e]"></a>k_linkedlist_pop_front</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = k_linkedlist_pop_front &rArr; linkedlist_pop_front &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_current_pcb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_pcb_to_kernel_pcb
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_pop_front
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_process
</UL>

<P><STRONG><a name="[5f]"></a>k_linkedlist_remove</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = k_linkedlist_remove &rArr; linkedlist_remove &rArr; linkedlist_pop_back &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_current_pcb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_pcb_to_kernel_pcb
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkedlist_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
</UL>

<P><STRONG><a name="[5a]"></a>k_should_preempt_current_process</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>

<P><STRONG><a name="[60]"></a>get_next_process</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_pop_front
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>

<P><STRONG><a name="[61]"></a>swap_process</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = swap_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_ready_or_blocked_process
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_new_process
</UL>

<P><STRONG><a name="[63]"></a>run_current_process</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_ready_or_blocked_process
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_new_process
</UL>

<P><STRONG><a name="[62]"></a>switch_new_process</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = switch_new_process &rArr; swap_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_current_process
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_process
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rte
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_process
</UL>

<P><STRONG><a name="[65]"></a>switch_ready_or_blocked_process</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = switch_ready_or_blocked_process &rArr; swap_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_current_process
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_process
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_process
</UL>

<P><STRONG><a name="[67]"></a>switch_other_process</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_process
</UL>

<P><STRONG><a name="[66]"></a>switch_process</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = switch_process &rArr; switch_ready_or_blocked_process &rArr; swap_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_other_process
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_ready_or_blocked_process
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_new_process
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>

<P><STRONG><a name="[3f]"></a>k_init_processor</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = k_init_processor &rArr; k_linkedlist_push_back &rArr; linkedlist_push_back &rArr; k_request_memory_block &rArr; k_release_processor &rArr; get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_procs
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_alloc_stack
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_set_procs
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
</UL>

<P><STRONG><a name="[33]"></a>k_release_processor</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = k_release_processor &rArr; get_next_process &rArr;  k_linkedlist_push_back (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_process
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_process
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_rtx_init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_set_process_priority
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_request_memory_block
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_memory_block
</UL>
<BR>[Address Reference Count : 2]<UL><LI> usr_proc.o(.text)
<LI> k_proc.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>k_set_process_priority</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = k_set_process_priority &rArr; k_linkedlist_remove &rArr; linkedlist_remove &rArr; linkedlist_pop_back &rArr; k_release_memory_block &rArr;  k_release_processor (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_remove
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_linkedlist_push_back
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_release_processor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>k_get_process_priority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, process.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usr_proc.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4c]"></a>ui2a</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, printf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2a
</UL>

<P><STRONG><a name="[4b]"></a>i2a</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui2a
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>

<P><STRONG><a name="[4e]"></a>a2d</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, printf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2i
</UL>

<P><STRONG><a name="[4d]"></a>a2i</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2d
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>

<P><STRONG><a name="[50]"></a>putchw</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, printf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_format
</UL>

<P><STRONG><a name="[36]"></a>putcp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tfp_sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
